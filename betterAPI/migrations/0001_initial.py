# Generated by Django 5.2.4 on 2025-07-19 19:15

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('yearName', models.CharField(max_length=10)),
                ('yearId', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('name', models.CharField(max_length=100, unique=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('courseName', models.CharField(max_length=200)),
                ('courseCode', models.CharField(max_length=6, primary_key=True, serialize=False, unique=True)),
                ('credits', models.SmallIntegerField(default=3)),
                ('description', models.TextField(blank=True, null=True)),
                ('level', models.SmallIntegerField(blank=True, default=0)),
                ('type', models.CharField(blank=True, choices=[('core', 'Core'), ('specialization', 'Specialization')], default='core', max_length=15)),
                ('prerequisites', models.ManyToManyField(blank=True, to='betterAPI.course')),
                ('departments', models.ManyToManyField(help_text='Departments that can access this course', related_name='courses', to='betterAPI.department')),
            ],
        ),
        migrations.CreateModel(
            name='Educator',
            fields=[
                ('nameAr', models.CharField(max_length=200)),
                ('nameEn', models.CharField(max_length=200)),
                ('nationalId', models.CharField(max_length=14, unique=True)),
                ('educatorId', models.CharField(max_length=5, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('type', models.CharField(choices=[('Teaching Assistant', 'Teaching Assistant'), ('Lecturer', 'Lecturer'), ('Assistant Professor', 'Assistant Professor'), ('Associate Professor', 'Associate Professor'), ('Professor', 'Professor')], default='Lecturer', max_length=30)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='educators', to='betterAPI.department')),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)])),
                ('group_number', models.PositiveIntegerField(help_text='Group within the level (1, 2, 3, etc.)')),
                ('capacity', models.PositiveIntegerField(default=60)),
                ('is_active', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='betterAPI.course')),
            ],
        ),
        migrations.CreateModel(
            name='SchedulePattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pattern_name', models.CharField(help_text="e.g., 'Tutorial 1', 'Lab Section A', 'Main Lecture'", max_length=100)),
                ('pattern_type', models.CharField(choices=[('LEC', 'Lecture'), ('LAB', 'Lab'), ('TUT', 'Tutorial')], default='LEC', max_length=3)),
                ('capacity', models.PositiveIntegerField(default=30)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patterns', to='betterAPI.registration')),
            ],
            options={
                'unique_together': {('registration', 'pattern_name')},
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('semesterId', models.AutoField(primary_key=True, serialize=False)),
                ('semesterName', models.CharField(blank=True, choices=[('fall', 'Fall'), ('spring', 'Spring'), ('summer', 'Summer')], default='fall', max_length=10, null=True)),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=3, null=True)),
                ('cgpa', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=3, null=True)),
                ('registeredHours', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('earnedHours', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('academicYear', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semesters', to='betterAPI.academicyear')),
                ('courses', models.ManyToManyField(blank=True, related_name='semesters', to='betterAPI.course')),
            ],
        ),
        migrations.AddField(
            model_name='registration',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='betterAPI.semester'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('nameAr', models.CharField(max_length=200)),
                ('nameEn', models.CharField(max_length=200)),
                ('studentId', models.CharField(max_length=5, primary_key=True, serialize=False, unique=True)),
                ('level', models.SmallIntegerField(blank=True, default=0, validators=[django.core.validators.MaxValueValidator(4)])),
                ('earnedHours', models.SmallIntegerField(blank=True, default=0)),
                ('nationalId', models.CharField(max_length=14, unique=True, validators=[django.core.validators.MinLengthValidator(14), django.core.validators.MaxLengthValidator(14)])),
                ('status', models.CharField(blank=True, choices=[('active', 'Active'), ('inactive', 'Inactive'), ('graduated', 'Graduated')], default='active', max_length=10, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('dateOfBirth', models.DateField()),
                ('address', models.CharField(max_length=255)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='betterAPI.department')),
            ],
        ),
        migrations.AddField(
            model_name='academicyear',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_years', to='betterAPI.student'),
        ),
        migrations.AlterUniqueTogether(
            name='registration',
            unique_together={('course', 'semester', 'level', 'group_number')},
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('letterGrade', models.CharField(blank=True, max_length=2, null=True)),
                ('numericGrade', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=3, null=True)),
                ('courseworkMax', models.SmallIntegerField(blank=True, default=50, null=True)),
                ('coursework', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('examMax', models.SmallIntegerField(blank=True, default=50, null=True)),
                ('exam', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('total', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='betterAPI.registration')),
                ('selected_patterns', models.ManyToManyField(related_name='enrollments', to='betterAPI.schedulepattern')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='betterAPI.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='betterAPI.student')),
            ],
            options={
                'unique_together': {('student', 'registration')},
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.PositiveSmallIntegerField(choices=[(0, 'Saturday'), (1, 'Sunday'), (2, 'Monday'), (3, 'Tuesday'), (4, 'Wednesday'), (5, 'Thursday')])),
                ('start_period', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('end_period', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('educator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='betterAPI.educator')),
                ('pattern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='betterAPI.schedulepattern')),
            ],
            options={
                'ordering': ['day', 'start_period'],
                'unique_together': {('pattern', 'day', 'start_period')},
            },
        ),
    ]
